{"version":3,"file":"sweetalert-wrapper.iife.js","sources":["../src/core/SweetAlertWrapper.js","../src/index.js"],"sourcesContent":["import Swal from 'sweetalert2';\r\n\r\n/**\r\n * SweetAlert2 Wrapper - Simplified Version\r\n * English API with Portuguese texts\r\n */\r\nclass SweetAlertWrapper {\r\n  constructor() {\r\n    this.defaultConfig = {\r\n      confirmButtonText: 'OK',\r\n      cancelButtonText: 'Cancelar',\r\n      showCloseButton: false,\r\n      timer: null,\r\n      timerProgressBar: false,\r\n    };\r\n    this.userConfig = {};\r\n    this.currentTheme = 'light';\r\n  }\r\n\r\n  /**\r\n   * Merge configurations\r\n   */\r\n  mergeConfig(...configs) {\r\n    return Object.assign({}, this.defaultConfig, this.userConfig, ...configs);\r\n  }\r\n\r\n  /**\r\n   * Format error array to HTML\r\n   */\r\n  formatErrors(errors) {\r\n    if (Array.isArray(errors)) {\r\n      return `<ul style=\"text-align: left; margin: 0; padding-left: 20px;\">${errors\r\n        .map((error) => `<li>${this.escapeHtml(error)}</li>`)\r\n        .join('')}</ul>`;\r\n    }\r\n    return this.escapeHtml(String(errors));\r\n  }\r\n\r\n  /**\r\n   * Escape HTML to prevent XSS\r\n   */\r\n  escapeHtml(text) {\r\n    const div = document.createElement('div');\r\n    div.textContent = text;\r\n    return div.innerHTML;\r\n  }\r\n\r\n  // === Notifications ===\r\n\r\n  /**\r\n   * Success alert\r\n   */\r\n  success(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'success',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Error alert\r\n   */\r\n  error(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'error',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Warning alert\r\n   */\r\n  warning(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'warning',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Info alert\r\n   */\r\n  info(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'info',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Confirm dialog\r\n   */\r\n  confirm(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'question',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Confirmar',\r\n        cancelButtonText: 'Cancelar',\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  // === Toasts ===\r\n\r\n  /**\r\n   * Success toast\r\n   */\r\n  toastSuccess(message, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        toast: true,\r\n        position: 'top-end',\r\n        icon: 'success',\r\n        title: this.escapeHtml(message),\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Error toast\r\n   */\r\n  toastError(message, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        toast: true,\r\n        position: 'top-end',\r\n        icon: 'error',\r\n        title: this.escapeHtml(message),\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Warning toast\r\n   */\r\n  toastWarning(message, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        toast: true,\r\n        position: 'top-end',\r\n        icon: 'warning',\r\n        title: this.escapeHtml(message),\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Info toast\r\n   */\r\n  toastInfo(message, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        toast: true,\r\n        position: 'top-end',\r\n        icon: 'info',\r\n        title: this.escapeHtml(message),\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  // === Extras ===\r\n\r\n  /**\r\n   * Multiple errors\r\n   */\r\n  errors(title, errors, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'error',\r\n        title: this.escapeHtml(title),\r\n        html: this.formatErrors(errors),\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Validation errors (Laravel style)\r\n   */\r\n  validationErrors(errors, options = {}) {\r\n    const errorMessages = [];\r\n    for (const [field, messages] of Object.entries(errors)) {\r\n      if (Array.isArray(messages)) {\r\n        errorMessages.push(...messages);\r\n      } else {\r\n        errorMessages.push(messages);\r\n      }\r\n    }\r\n\r\n    return this.errors('Erros de Validação', errorMessages, options);\r\n  }\r\n\r\n  /**\r\n   * Input dialog\r\n   */\r\n  input(title, inputType = 'text', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        title: this.escapeHtml(title),\r\n        input: inputType,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Confirmar',\r\n        cancelButtonText: 'Cancelar',\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Loading indicator\r\n   */\r\n  loading(title = 'Carregando...', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        title: this.escapeHtml(title),\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        showConfirmButton: false,\r\n        didOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Close current alert\r\n   */\r\n  close() {\r\n    Swal.close();\r\n  }\r\n\r\n  // === Configuration ===\r\n\r\n  /**\r\n   * Set global configuration\r\n   */\r\n  config(newConfig) {\r\n    this.userConfig = { ...this.userConfig, ...newConfig };\r\n  }\r\n\r\n  /**\r\n   * Set theme\r\n   */\r\n  setTheme(theme) {\r\n    this.currentTheme = theme;\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n  }\r\n\r\n  /**\r\n   * Custom alert\r\n   */\r\n  custom(options) {\r\n    return Swal.fire(this.mergeConfig(options));\r\n  }\r\n\r\n  /**\r\n   * Access to original Swal\r\n   */\r\n  get swal() {\r\n    return Swal;\r\n  }\r\n}\r\n\r\nexport default SweetAlertWrapper;\r\n","import SweetAlertWrapper from './core/SweetAlertWrapper.js';\r\nimport './themes/default.css';\r\n\r\n// Create default instance\r\nconst sweetAlert = new SweetAlertWrapper();\r\n\r\n// Shortcuts\r\nexport default sweetAlert;\r\nexport { SweetAlertWrapper };\r\n\r\n// Global browser access\r\nif (typeof window !== 'undefined') {\r\n  window.sweetAlert = sweetAlert;\r\n  window.SweetAlert = sweetAlert; // Compatibility\r\n  window.SweetAlertWrapper = SweetAlertWrapper;\r\n}\r\n"],"names":["SweetAlertWrapper","constructor","this","defaultConfig","confirmButtonText","cancelButtonText","showCloseButton","timer","timerProgressBar","userConfig","currentTheme","mergeConfig","configs","Object","assign","formatErrors","errors","Array","isArray","map","error","escapeHtml","join","String","text","div","document","createElement","textContent","innerHTML","success","title","options","Swal","fire","icon","warning","info","confirm","showCancelButton","toastSuccess","message","toast","position","showConfirmButton","toastError","toastWarning","toastInfo","html","validationErrors","errorMessages","field","messages","entries","push","input","inputType","loading","allowOutsideClick","allowEscapeKey","didOpen","showLoading","close","config","newConfig","setTheme","theme","documentElement","setAttribute","custom","swal","sweetAlert","window","SweetAlert"],"mappings":"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"}