{"version":3,"file":"sweetalert-wrapper.es.js","sources":["../src/core/SweetAlertWrapper.js","../src/index.js"],"sourcesContent":["import Swal from 'sweetalert2';\r\n\r\n/**\r\n * SweetAlert2 Wrapper - Simplified Version\r\n * English API with Portuguese texts\r\n */\r\nclass SweetAlertWrapper {\r\n  constructor() {\r\n    this.defaultConfig = {\r\n      confirmButtonText: 'OK',\r\n      cancelButtonText: 'Cancelar',\r\n      showCloseButton: false,\r\n      timer: null,\r\n      timerProgressBar: false,\r\n    };\r\n    this.userConfig = {};\r\n    this.currentTheme = 'light';\r\n  }\r\n\r\n  /**\r\n   * Merge configurations\r\n   */\r\n  mergeConfig(...configs) {\r\n    return Object.assign({}, this.defaultConfig, this.userConfig, ...configs);\r\n  }\r\n\r\n  /**\r\n   * Format error array to HTML\r\n   */\r\n  formatErrors(errors) {\r\n    if (Array.isArray(errors)) {\r\n      return `<ul style=\"text-align: left; margin: 0; padding-left: 20px;\">${errors\r\n        .map((error) => `<li>${this.escapeHtml(error)}</li>`)\r\n        .join('')}</ul>`;\r\n    }\r\n    return this.escapeHtml(String(errors));\r\n  }\r\n\r\n  /**\r\n   * Escape HTML to prevent XSS\r\n   */\r\n  escapeHtml(text) {\r\n    const div = document.createElement('div');\r\n    div.textContent = text;\r\n    return div.innerHTML;\r\n  }\r\n\r\n  // === Notifications ===\r\n\r\n  /**\r\n   * Success alert\r\n   */\r\n  success(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'success',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Error alert\r\n   */\r\n  error(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'error',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Warning alert\r\n   */\r\n  warning(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'warning',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Info alert\r\n   */\r\n  info(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'info',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Confirm dialog\r\n   */\r\n  confirm(title, text = '', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'question',\r\n        title: this.escapeHtml(title),\r\n        text: text ? this.escapeHtml(text) : undefined,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Confirmar',\r\n        cancelButtonText: 'Cancelar',\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  // === Toasts ===\r\n\r\n  /**\r\n   * Success toast\r\n   */\r\n  toastSuccess(message, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        toast: true,\r\n        position: 'top-end',\r\n        icon: 'success',\r\n        title: this.escapeHtml(message),\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Error toast\r\n   */\r\n  toastError(message, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        toast: true,\r\n        position: 'top-end',\r\n        icon: 'error',\r\n        title: this.escapeHtml(message),\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Warning toast\r\n   */\r\n  toastWarning(message, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        toast: true,\r\n        position: 'top-end',\r\n        icon: 'warning',\r\n        title: this.escapeHtml(message),\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Info toast\r\n   */\r\n  toastInfo(message, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        toast: true,\r\n        position: 'top-end',\r\n        icon: 'info',\r\n        title: this.escapeHtml(message),\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  // === Extras ===\r\n\r\n  /**\r\n   * Multiple errors\r\n   */\r\n  errors(title, errors, options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        icon: 'error',\r\n        title: this.escapeHtml(title),\r\n        html: this.formatErrors(errors),\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Validation errors (Laravel style)\r\n   */\r\n  validationErrors(errors, options = {}) {\r\n    const errorMessages = [];\r\n    for (const [field, messages] of Object.entries(errors)) {\r\n      if (Array.isArray(messages)) {\r\n        errorMessages.push(...messages);\r\n      } else {\r\n        errorMessages.push(messages);\r\n      }\r\n    }\r\n\r\n    return this.errors('Erros de Validação', errorMessages, options);\r\n  }\r\n\r\n  /**\r\n   * Input dialog\r\n   */\r\n  input(title, inputType = 'text', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        title: this.escapeHtml(title),\r\n        input: inputType,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Confirmar',\r\n        cancelButtonText: 'Cancelar',\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Loading indicator\r\n   */\r\n  loading(title = 'Carregando...', options = {}) {\r\n    return Swal.fire(\r\n      this.mergeConfig({\r\n        title: this.escapeHtml(title),\r\n        allowOutsideClick: false,\r\n        allowEscapeKey: false,\r\n        showConfirmButton: false,\r\n        didOpen: () => {\r\n          Swal.showLoading();\r\n        },\r\n        ...options,\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Close current alert\r\n   */\r\n  close() {\r\n    Swal.close();\r\n  }\r\n\r\n  // === Configuration ===\r\n\r\n  /**\r\n   * Set global configuration\r\n   */\r\n  config(newConfig) {\r\n    this.userConfig = { ...this.userConfig, ...newConfig };\r\n  }\r\n\r\n  /**\r\n   * Set theme\r\n   */\r\n  setTheme(theme) {\r\n    this.currentTheme = theme;\r\n    document.documentElement.setAttribute('data-theme', theme);\r\n  }\r\n\r\n  /**\r\n   * Custom alert\r\n   */\r\n  custom(options) {\r\n    return Swal.fire(this.mergeConfig(options));\r\n  }\r\n\r\n  /**\r\n   * Access to original Swal\r\n   */\r\n  get swal() {\r\n    return Swal;\r\n  }\r\n}\r\n\r\nexport default SweetAlertWrapper;\r\n","import SweetAlertWrapper from './core/SweetAlertWrapper.js';\r\nimport './themes/default.css';\r\n\r\n// Create default instance\r\nconst sweetAlert = new SweetAlertWrapper();\r\n\r\n// Shortcuts\r\nexport default sweetAlert;\r\nexport { SweetAlertWrapper };\r\n\r\n// Global browser access\r\nif (typeof window !== 'undefined') {\r\n  window.sweetAlert = sweetAlert;\r\n  window.SweetAlert = sweetAlert; // Compatibility\r\n  window.SweetAlertWrapper = SweetAlertWrapper;\r\n}\r\n"],"names":[],"mappings":";AAMA,MAAM,kBAAkB;AAAA,EACtB,cAAc;AACZ,SAAK,gBAAgB;AAAA,MACnB,mBAAmB;AAAA,MACnB,kBAAkB;AAAA,MAClB,iBAAiB;AAAA,MACjB,OAAO;AAAA,MACP,kBAAkB;AAAA,IACxB;AACI,SAAK,aAAa;AAClB,SAAK,eAAe;AAAA,EACtB;AAAA;AAAA;AAAA;AAAA,EAKA,eAAe,SAAS;AACtB,WAAO,OAAO,OAAO,CAAA,GAAI,KAAK,eAAe,KAAK,YAAY,GAAG,OAAO;AAAA,EAC1E;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,QAAQ;AACnB,QAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,aAAO,gEAAgE,OACpE,IAAI,CAAC,UAAU,OAAO,KAAK,WAAW,KAAK,CAAC,OAAO,EACnD,KAAK,EAAE,CAAC;AAAA,IACb;AACA,WAAO,KAAK,WAAW,OAAO,MAAM,CAAC;AAAA,EACvC;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,MAAM;AACf,UAAM,MAAM,SAAS,cAAc,KAAK;AACxC,QAAI,cAAc;AAClB,WAAO,IAAI;AAAA,EACb;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,QAAQ,OAAO,OAAO,IAAI,UAAU,CAAA,GAAI;AACtC,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,KAAK;AAAA,QAC5B,MAAM,OAAO,KAAK,WAAW,IAAI,IAAI;AAAA,QACrC,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,OAAO,IAAI,UAAU,CAAA,GAAI;AACpC,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,KAAK;AAAA,QAC5B,MAAM,OAAO,KAAK,WAAW,IAAI,IAAI;AAAA,QACrC,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,OAAO,OAAO,IAAI,UAAU,CAAA,GAAI;AACtC,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,KAAK;AAAA,QAC5B,MAAM,OAAO,KAAK,WAAW,IAAI,IAAI;AAAA,QACrC,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,KAAK,OAAO,OAAO,IAAI,UAAU,CAAA,GAAI;AACnC,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,KAAK;AAAA,QAC5B,MAAM,OAAO,KAAK,WAAW,IAAI,IAAI;AAAA,QACrC,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,OAAO,OAAO,IAAI,UAAU,CAAA,GAAI;AACtC,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,KAAK;AAAA,QAC5B,MAAM,OAAO,KAAK,WAAW,IAAI,IAAI;AAAA,QACrC,kBAAkB;AAAA,QAClB,mBAAmB;AAAA,QACnB,kBAAkB;AAAA,QAClB,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,aAAa,SAAS,UAAU,IAAI;AAClC,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,OAAO;AAAA,QAC9B,mBAAmB;AAAA,QACnB,OAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,WAAW,SAAS,UAAU,IAAI;AAChC,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,OAAO;AAAA,QAC9B,mBAAmB;AAAA,QACnB,OAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,aAAa,SAAS,UAAU,IAAI;AAClC,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,OAAO;AAAA,QAC9B,mBAAmB;AAAA,QACnB,OAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,UAAU,SAAS,UAAU,IAAI;AAC/B,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,OAAO;AAAA,QACP,UAAU;AAAA,QACV,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,OAAO;AAAA,QAC9B,mBAAmB;AAAA,QACnB,OAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,OAAO,QAAQ,UAAU,CAAA,GAAI;AAClC,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,MAAM;AAAA,QACN,OAAO,KAAK,WAAW,KAAK;AAAA,QAC5B,MAAM,KAAK,aAAa,MAAM;AAAA,QAC9B,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,iBAAiB,QAAQ,UAAU,IAAI;AACrC,UAAM,gBAAgB,CAAA;AACtB,eAAW,CAAC,OAAO,QAAQ,KAAK,OAAO,QAAQ,MAAM,GAAG;AACtD,UAAI,MAAM,QAAQ,QAAQ,GAAG;AAC3B,sBAAc,KAAK,GAAG,QAAQ;AAAA,MAChC,OAAO;AACL,sBAAc,KAAK,QAAQ;AAAA,MAC7B;AAAA,IACF;AAEA,WAAO,KAAK,OAAO,sBAAsB,eAAe,OAAO;AAAA,EACjE;AAAA;AAAA;AAAA;AAAA,EAKA,MAAM,OAAO,YAAY,QAAQ,UAAU,CAAA,GAAI;AAC7C,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,OAAO,KAAK,WAAW,KAAK;AAAA,QAC5B,OAAO;AAAA,QACP,kBAAkB;AAAA,QAClB,mBAAmB;AAAA,QACnB,kBAAkB;AAAA,QAClB,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ,QAAQ,iBAAiB,UAAU,CAAA,GAAI;AAC7C,WAAO,KAAK;AAAA,MACV,KAAK,YAAY;AAAA,QACf,OAAO,KAAK,WAAW,KAAK;AAAA,QAC5B,mBAAmB;AAAA,QACnB,gBAAgB;AAAA,QAChB,mBAAmB;AAAA,QACnB,SAAS,MAAM;AACb,eAAK,YAAW;AAAA,QAClB;AAAA,QACA,GAAG;AAAA,MACX,CAAO;AAAA,IACP;AAAA,EACE;AAAA;AAAA;AAAA;AAAA,EAKA,QAAQ;AACN,SAAK,MAAK;AAAA,EACZ;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAO,WAAW;AAChB,SAAK,aAAa,EAAE,GAAG,KAAK,YAAY,GAAG;EAC7C;AAAA;AAAA;AAAA;AAAA,EAKA,SAAS,OAAO;AACd,SAAK,eAAe;AACpB,aAAS,gBAAgB,aAAa,cAAc,KAAK;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO,SAAS;AACd,WAAO,KAAK,KAAK,KAAK,YAAY,OAAO,CAAC;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAKA,IAAI,OAAO;AACT,WAAO;AAAA,EACT;AACF;ACvSK,MAAC,aAAa,IAAI,kBAAiB;AAOxC,IAAI,OAAO,WAAW,aAAa;AACjC,SAAO,aAAa;AACpB,SAAO,aAAa;AACpB,SAAO,oBAAoB;AAC7B;"}